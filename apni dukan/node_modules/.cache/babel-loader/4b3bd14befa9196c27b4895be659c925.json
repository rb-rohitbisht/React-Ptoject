{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\shop\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data'; // import axios from 'axios';/\n\nconst context = React.createContext();\nconst Provider = context.Provider;\nexport const Consumer = context.Consumer;\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      auth: false,\n      products: [],\n      detailProduct: [],\n      cart: [],\n      modelOpen: false,\n      modelProduct: detailProduct,\n      cartSubTotal: 0,\n      cartText: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProduct = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProduct = [...tempProduct, singleItem];\n      });\n      this.setState({\n        products: tempProduct\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handelDetail = id => {\n      const product = this.getItem(id);\n      this.setState({\n        detailProduct: product\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProduct = [...this.state.products];\n      const index = tempProduct.indexOf(this.getItem(id));\n      const product = tempProduct[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProduct,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotal();\n      });\n    };\n\n    this.openModel = id => {\n      const product = this.getItem(id);\n      this.setState({\n        modelProduct: product,\n        modelOpen: true\n      });\n    };\n\n    this.closeModel = () => {\n      this.setState({\n        modelOpen: false\n      });\n    };\n\n    this.incremant = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count += 1;\n      product.total = product.count * product.price;\n      this.setState({\n        cart: [...tempCart]\n      }, () => this.addTotal());\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count -= 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n        this.setState({\n          cart: [...tempCart]\n        }, () => this.addTotal());\n      }\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState({\n        cart: [...tempCart],\n        products: [...tempProducts]\n      }, () => this.addTotal());\n    };\n\n    this.clearCart = () => {\n      this.setState({\n        cart: []\n      }, () => {\n        this.setProducts();\n        this.addTotal();\n      });\n    };\n\n    this.addTotal = () => {\n      let subtotal = 0;\n      this.state.cart.map(item => subtotal += item.total);\n      const tempTax = subtotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subtotal + tax;\n      this.setState({\n        cartSubTotal: subtotal,\n        cartText: tax,\n        cartTotal: total\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Provider, {\n      value: {\n        auth: this.state.auth,\n        products: this.state.products,\n        addToCart: this.addToCart,\n        handelDetail: this.handelDetail,\n        detailProduct: this.state.detailProduct,\n        openModel: this.openModel,\n        closeModel: this.closeModel,\n        modelOpen: this.state.modelOpen,\n        modelProduct: this.state.modelProduct,\n        increment: this.incremant,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart,\n        cart: this.state.cart,\n        cartSubTotal: this.state.cartSubTotal,\n        cartText: this.state.cartText,\n        cartTotal: this.state.cartTotal\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport default ProductProvider;","map":{"version":3,"sources":["C:/Users/Dell/Desktop/shop/src/context.js"],"names":["React","Component","storeProducts","detailProduct","context","createContext","Provider","Consumer","ProductProvider","state","auth","products","cart","modelOpen","modelProduct","cartSubTotal","cartText","cartTotal","setProducts","tempProduct","forEach","item","singleItem","setState","getItem","id","product","find","handelDetail","addToCart","index","indexOf","inCart","count","price","total","addTotal","openModel","closeModel","incremant","tempCart","selectedProduct","decrement","removeItem","tempProducts","filter","removedProduct","clearCart","subtotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","increment","props","children"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\r\nimport { storeProducts , detailProduct } from './data';\r\n// import axios from 'axios';/\r\n\r\nconst context = React.createContext()\r\n\r\nconst Provider = context.Provider\r\nexport const Consumer = context.Consumer\r\n\r\nclass ProductProvider extends Component {\r\n    state = { \r\n        auth: false,\r\n        products:[],\r\n        detailProduct: [],\r\n        cart:[],\r\n        modelOpen: false,\r\n        modelProduct : detailProduct,\r\n        cartSubTotal:0,\r\n        cartText:0,\r\n        cartTotal:0,\r\n     }\r\n    \r\n\r\n\r\n     componentDidMount(){\r\n        this.setProducts()\r\n      \r\n    }\r\n\r\n    setProducts=()=>{\r\n        let tempProduct=[];\r\n        storeProducts.forEach(item=>{\r\n            const singleItem = {...item};\r\n            tempProduct=[...tempProduct, singleItem];\r\n        });\r\n        this.setState({products: tempProduct })\r\n    }\r\n\r\n    getItem=(id)=>{\r\n        const product = this.state.products.find(item=> item.id === id);\r\n        return product;\r\n    }\r\n\r\n    handelDetail = (id)=>{\r\n        const product = this.getItem(id);\r\n        this.setState({ detailProduct : product})\r\n    }\r\n\r\n    addToCart=(id)=>{\r\n        let tempProduct = [...this.state.products];\r\n        const index= tempProduct.indexOf(this.getItem(id));\r\n        const product = tempProduct[index];\r\n        product.inCart = true ;\r\n        product.count = 1;\r\n        const price = product.price;\r\n        product.total = price;\r\n        this.setState(()=>{\r\n            return { products : tempProduct , cart:[...this.state.cart , product]}\r\n        },()=>{this.addTotal()})\r\n    }\r\n\r\n    openModel=(id)=>{\r\n        const product = this.getItem(id);\r\n        this.setState({modelProduct : product , modelOpen : true })\r\n    }\r\n\r\n    closeModel=()=>{\r\n        this.setState({modelOpen: false})\r\n    }\r\n\r\n    incremant = (id)=>{\r\n       let tempCart = [...this.state.cart]\r\n       const selectedProduct = tempCart.find(item=>item.id === id)\r\n       const index = tempCart.indexOf(selectedProduct)\r\n       const product = tempCart[index];\r\n\r\n       product.count += 1;\r\n       product.total = product.count * product.price;\r\n\r\n   \r\n       this.setState({cart:[...tempCart]},()=>this.addTotal())\r\n    }\r\n\r\n    decrement=(id)=>{\r\n        let tempCart = [...this.state.cart]\r\n        const selectedProduct = tempCart.find(item=>item.id === id)\r\n        const index = tempCart.indexOf(selectedProduct)\r\n        const product = tempCart[index];\r\n \r\n        product.count -= 1;\r\n\r\n        if(product.count === 0 ){\r\n            this.removeItem(id)\r\n        }\r\n     else{\r\n        product.total = product.count * product.price;\r\n \r\n        this.setState({cart:[...tempCart]},()=>this.addTotal())\r\n     }\r\n       \r\n    }\r\n\r\n    removeItem =(id)=>{\r\n       let tempProducts=[...this.state.products]\r\n       let tempCart = [...this.state.cart]\r\n       \r\n       tempCart = tempCart.filter(item => item.id !== id);\r\n       const index = tempProducts.indexOf(this.getItem(id));\r\n       let removedProduct = tempProducts[index];\r\n       removedProduct.inCart = false;\r\n       removedProduct.count = 0;\r\n       removedProduct.total = 0;\r\n\r\n       this.setState({\r\n           cart: [...tempCart],\r\n           products : [...tempProducts]\r\n       },()=>this.addTotal())\r\n    }\r\n\r\n    clearCart=()=>{\r\n        this.setState({cart : []},\r\n            ()=>{this.setProducts();\r\n            this.addTotal()})\r\n    }\r\n\r\n    addTotal=()=>{\r\n        let subtotal=0;\r\n        this.state.cart.map(item=>(subtotal += item.total));\r\n        const tempTax = subtotal * 0.1;\r\n        const tax = parseFloat(tempTax.toFixed(2));\r\n        const total = subtotal + tax;\r\n        this.setState({ cartSubTotal : subtotal, cartText: tax , cartTotal : total })\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <Provider \r\n            value={{\r\n            auth: this.state.auth,    \r\n            products: this.state.products,\r\n             addToCart : this.addToCart,\r\n             handelDetail: this.handelDetail,\r\n             detailProduct : this.state.detailProduct,\r\n             openModel : this.openModel,\r\n             closeModel: this.closeModel,\r\n             modelOpen: this.state.modelOpen,\r\n             modelProduct: this.state.modelProduct,\r\n             increment: this.incremant,\r\n             decrement:this.decrement,\r\n             removeItem:this.removeItem,\r\n             clearCart:this.clearCart,\r\n             cart: this.state.cart,\r\n             cartSubTotal:this.state.cartSubTotal,\r\n             cartText:this.state.cartText,\r\n             cartTotal:this.state.cartTotal,\r\n             }} >\r\n                {this.props.children}\r\n            </Provider>\r\n          );\r\n    }\r\n}\r\n \r\nexport default ProductProvider;"]},"metadata":{},"sourceType":"module"}