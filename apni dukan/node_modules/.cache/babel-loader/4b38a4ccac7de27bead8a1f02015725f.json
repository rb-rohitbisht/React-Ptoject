{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\shop\\\\src\\\\components\\\\auth\\\\register.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport validator from \"validator\";\nimport { ButtonContainer } from \"../button\";\nimport { useState } from \"react\";\nimport { Form, Alert } from \"react-bootstrap\";\n\nconst RegisterForm = () => {\n  const [username, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [conformPassword, setConformPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    let data = {\n      username: username,\n      email: email,\n      password\n    };\n    axios.post(\"http://localhost:2000/user/register\", data).then(response => {\n      console.log(response.data);\n\n      if (response.data === \"data submited\") {\n        alert(\"you registered as a user \");\n        setUserName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setConformPassword(\"\");\n      } else {\n        setErrors(response.data);\n      }\n    }).catch(err => {\n      console.log(\"error : *****\", err);\n      alert(\"connection error plese try again\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    id: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"register your self \", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"leg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 30\n    }\n  }, \"\\uD83E\\uDD17\")), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicUserName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"User Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"ex. pwn tiwari\",\n    type: \"text\",\n    value: username,\n    onChange: e => setUserName(e.target.value),\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, username === \"\" ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"User Name cant be blanke\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"\\u274C\")) : username.length > 20 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \" \", \"username cannot contain more then 20 characters \\u200D\", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"\\u274C\"), \" \") : null)), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, validator.isEmail(email) ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"\\\" valid email formate\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"\\u2705\"), \"\\\"\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"invalid email formate\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"\\u274C\")), \"We'll never share your email with anyone else.\\uD83D\\uDC6E\\u200D\\u2642\\uFE0F\")), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, password.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, \"password can not be empty\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, \"\\u274C\"), \" \") : password.length < 8 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \"password must be 8 character long\", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"\\u274C\"), \" \") : password.length > 20 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"password cannot contain more then 20 characters\", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, \"\\u274C\"), \" \") : null)), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, \"Conform Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"conform Password\",\n    value: conformPassword,\n    onChange: e => setConformPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, password !== conformPassword ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, \"password not match\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, \"\\u274C\")) : null)), errors.length > 0 ? /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, errors.map((error, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, error)))) : null, /*#__PURE__*/React.createElement(ButtonContainer, {\n    onClick: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, \"sign Up / register\")));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["C:/Users/Dell/Desktop/shop/src/components/auth/register.jsx"],"names":["React","axios","validator","ButtonContainer","useState","Form","Alert","RegisterForm","username","setUserName","email","setEmail","password","setPassword","conformPassword","setConformPassword","errors","setErrors","submitHandler","e","preventDefault","data","post","then","response","console","log","alert","catch","err","target","value","length","isEmail","map","error","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,iBAA5B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMc,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,IAAI,GAAG;AAAEb,MAAAA,QAAQ,EAAEA,QAAZ;AAAsBE,MAAAA,KAAK,EAAEA,KAA7B;AAAoCE,MAAAA;AAApC,KAAX;AACAX,IAAAA,KAAK,CACFqB,IADH,CACQ,qCADR,EAC+CD,IAD/C,EAEGE,IAFH,CAESC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACH,IAArB;;AACA,UAAIG,QAAQ,CAACH,IAAT,KAAkB,eAAtB,EAAuC;AACrCM,QAAAA,KAAK,CAAC,2BAAD,CAAL;AACAlB,QAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,QAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,QAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACD,OAND,MAMO;AACLE,QAAAA,SAAS,CAACO,QAAQ,CAACH,IAAV,CAAT;AACD;AACF,KAbH,EAcGO,KAdH,CAcUC,GAAD,IAAS;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,GAA7B;AACAF,MAAAA,KAAK,CAAC,kCAAD,CAAL;AACD,KAjBH;AAkBD,GArBD;;AAuBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAuB;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAvB,CADA,eAEE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,WAAW,EAAC,gBADd;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEnB,QAHT;AAIE,IAAA,QAAQ,EAAGW,CAAD,IAAOV,WAAW,CAACU,CAAC,CAACW,MAAF,CAASC,KAAV,CAJ9B;AAKE,IAAA,YAAY,EAAC,KALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eASE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,QAAQ,KAAK,EAAb,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAC2B,GAD3B,eAEE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADD,GAOGA,QAAQ,CAACwB,MAAT,GAAkB,EAAlB,gBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,yEAGE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAKU,GALV,CADE,GAQA,IAhBN,CATF,CAFF,eA+BE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,aAFd;AAGE,IAAA,KAAK,EAAEtB,KAHT;AAIE,IAAA,QAAQ,EAAGS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACW,MAAF,CAASC,KAAV,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG7B,SAAS,CAAC+B,OAAV,CAAkBvB,KAAlB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACwB,GADxB,eAEE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,OADD,gBASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACwB,GADxB,eAEE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAVJ,iFARF,CA/BF,eA6DE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,KAAK,EAAEE,QAHT;AAIE,IAAA,QAAQ,EAAGO,CAAD,IAAON,WAAW,CAACM,CAAC,CAACW,MAAF,CAASC,KAAV,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,QAAQ,CAACoB,MAAT,KAAoB,CAApB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAC4B,GAD5B,eAEE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAIU,GAJV,CADD,GAOGpB,QAAQ,CAACoB,MAAT,GAAkB,CAAlB,gBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAEE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAIU,GAJV,CADE,GAOApB,QAAQ,CAACoB,MAAT,GAAkB,EAAlB,gBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEAEE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAIU,GAJV,CADE,GAOA,IAtBN,CARF,CA7DF,eA+FE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,kBAFd;AAGE,IAAA,KAAK,EAAElB,eAHT;AAIE,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,kBAAkB,CAACI,CAAC,CAACW,MAAF,CAASC,KAAV,CAJrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,QAAQ,KAAKE,eAAb,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACqB,GADrB,eAEE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADD,GAOG,IARN,CARF,CA/FF,EAmHGE,MAAM,CAACgB,MAAP,GAAgB,CAAhB,gBACC,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,MAAM,CAACkB,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACV;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBD,KAAjB,CADD,CADH,CADF,CADD,GAQG,IA3HN,eA6HE,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAEjB,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BA7HF,CAFF,CADF;AAsID,CApKD;;AAsKA,eAAeX,YAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport validator from \"validator\";\r\nimport { ButtonContainer } from \"../button\";\r\nimport { useState } from \"react\";\r\nimport { Form, Alert } from \"react-bootstrap\";\r\n\r\nconst RegisterForm = () => {\r\n  const [username, setUserName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [conformPassword, setConformPassword] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let data = { username: username, email: email, password };\r\n    axios\r\n      .post(\"http://localhost:2000/user/register\", data)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (response.data === \"data submited\") {\r\n          alert(\"you registered as a user \");\r\n          setUserName(\"\");\r\n          setEmail(\"\");\r\n          setPassword(\"\");\r\n          setConformPassword(\"\");\r\n        } else {\r\n          setErrors(response.data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error : *****\", err);\r\n        alert(\"connection error plese try again\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n     \r\n      <Form id=\"form\">\r\n      <h1>register your self <span role=\"img\" aria-label=\"leg\" >🤗</span></h1>\r\n        <Form.Group controlId=\"formBasicUserName\">\r\n          <Form.Label>User Name</Form.Label>\r\n          <Form.Control\r\n            placeholder=\"ex. pwn tiwari\"\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUserName(e.target.value)}\r\n            autoComplete=\"off\"\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            {username === \"\" ? (\r\n              <p>\r\n                User Name cant be blanke{\" \"}\r\n                <span role=\"img\" aria-label=\"img\">\r\n                  ❌\r\n                </span>\r\n              </p>\r\n            ) : username.length > 20 ? (\r\n              <p>\r\n                {\" \"}\r\n                username cannot contain more then 20 characters ‍\r\n                <span role=\"img\" aria-label=\"img\">\r\n                  ❌\r\n                </span>{\" \"}\r\n              </p>\r\n            ) : null}\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            {validator.isEmail(email) ? (\r\n              <p>\r\n                \" valid email formate{\" \"}\r\n                <span role=\"img\" aria-label=\"img\">\r\n                  ✅\r\n                </span>\r\n                \"\r\n              </p>\r\n            ) : (\r\n              <p>\r\n                invalid email formate{\" \"}\r\n                <span role=\"img\" aria-label=\"img\">\r\n                  ❌\r\n                </span>\r\n              \r\n              </p>\r\n            )}\r\n            We'll never share your email with anyone else.👮‍♂️\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            {password.length === 0 ? (\r\n              <p>\r\n                password can not be empty{\" \"}\r\n                <span role=\"img\" aria-label=\"img\">\r\n                  ❌\r\n                </span>{\" \"}\r\n              </p>\r\n            ) : password.length < 8 ? (\r\n              <p>\r\n                password must be 8 character long\r\n                <span role=\"img\" aria-label=\"img\">\r\n                  ❌\r\n                </span>{\" \"}\r\n              </p>\r\n            ) : password.length > 20 ? (\r\n              <p>\r\n                password cannot contain more then 20 characters\r\n                <span role=\"img\" aria-label=\"img\">\r\n                  ❌\r\n                </span>{\" \"}\r\n              </p>\r\n            ) : null}\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword2\">\r\n          <Form.Label>Conform Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"conform Password\"\r\n            value={conformPassword}\r\n            onChange={(e) => setConformPassword(e.target.value)}\r\n          />\r\n          <Form.Text>\r\n            {password !== conformPassword ? (\r\n              <p>\r\n                password not match{\" \"}\r\n                <span role=\"img\" aria-label=\"img\">\r\n                  ❌\r\n                </span>\r\n              </p>\r\n            ) : null}\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        {errors.length > 0 ? (\r\n          <Alert variant=\"danger\">\r\n            <ul>\r\n              {errors.map((error, index) => (\r\n                <li key={index}>{error}</li>\r\n              ))}\r\n            </ul>\r\n          </Alert>\r\n        ) : null}\r\n\r\n        <ButtonContainer onClick={submitHandler}>\r\n          sign Up / register\r\n        </ButtonContainer>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}